package project1;

public class Color {
		//Add your instance variables here
		public static final int MAX_COLOR = 255;
		int R, G, B, H, S, V; 
		
		public Color(int type, int a, int b, int c) {
			if (type == 1) {
				R = a; 
				G = b; 
				B = c;
				
			}else {
				H = a; 
				S = b; 
				V = c;
			}
			



		}
		public void setRGB(int r, int g, int b) {
			R = r; 
			G = g; 
			B = b; 
		}
		
		public void setHSV(int h, int s, int b) {
			H = h; 
			S = s; 
			V = b; 


		}
		public void setRed(int r) {
			R = r; 


		}
		public void setGreen(int g) {
			G = g; 


		}
		public void setBlue(int b) {
			B = b; 


		}
		public void setHue(int h) {
			H = h; 


		}
		public void setSaturation(int s) {
			S = s; 


		}
		public void setBrightness(int b) {
			V = b; 


		}
		public int getRed() {
			return R; 


		}
		public int getBlue() {
			return B; 


		}
		public int getGreen() {
			return G; 

		}
		public int getHue() {
			return H; 


		}
		public int getSaturation() {
			return S; 


		}
		public int getBrightness() {
			return V; 


		}
		public int[] getRGB() {			
			int[] values = {R,G,B};
			return values;

		}
		public int[] getHSV() {			
			int[] values = {H,S,V};
			return values;

		}
		
		private double getMaximum(double one, double two, double three) {
			double max = one;
	        if (two > max) {
	            max = two;
	        }
	 
	        if (three > max) {
	            max = three;
	        }
	 
	        return max;
				
		}


		private double getMinimum(double one, double two, double three) {
			double min = one;
	        if (two < min) {
	            min = two;
	        }
	 
	        if (three < min) {
	            min = three;
	        }
	 
	        return min;


		}
		private void calculateHue(double r, double g, double b, double max, double min) {
			double delta = max - min; 
			
			if (delta == 0) {
				H = 0; 
			}
			if (max == r) {
				H = (int) (60 * ((g-b)/delta %6)); 
			}
			if (max == g) {
				H = (int) (60 * ((b-r)/delta +2)); 
			}
			if (max == b) {
				H = (int) (60 * ((r-g)/delta +4)); 
			}


		}
		private void calculateSaturation(double r, double g, double b, double max, double min) {
			double delta = (max - min); 
			
			if (max == 0) {
				S = 0;
			}
			if (max != 0) {
				S = (int) (delta/max);
				S = S * 100;
			}


		}
		
		private void calculateBrightness(double r, double g, double b, double max, double min) {
			V = (int) (max *100); 
		}
		
		public void RGBtoHSV() {
			double Ri = R/255.0;
			double Gi = G/255.0;
			double Bi = B/255.0;
			double max = getMaximum(Ri,Gi,Bi);
			double min = getMinimum(Ri,Gi,Bi);
			calculateHue(Ri,Gi,Bi,max,min);
			calculateSaturation(Ri,Gi,Bi,max,min);
			calculateBrightness(Ri,Gi,Bi,max,min);

		}
		
		public void HSVtoRGB() {
			int c=0,x=0,m=0;
			int tempR=0, tempG=0, tempB=0;
				c = V * S;
				x = c * (1- Math.abs( ((H/60)%2) -1));
				m = V - c;
			
				if(H>=300 && H<360) {
					tempR = c;
					tempG = 0;
					tempB = x;
				}
				else if(H>=240 && H<300) {
					tempR = x;
					tempG = 0;
					tempB = c;
				}
				else if(H>=180 && H<240) {
					tempR = 0;
					tempG = x;
					tempB = c;
				}
				else if(H>=120 && H<180) {
					tempR = 0;
					tempG = c;
					tempB = x;
				}
				else if(H>=60 && H<120) {
					tempR = x;
					tempG = c;
					tempB = 0;
				}
				else if(H>=0 && H<60) {
					tempR = c;
					tempG = x;
					tempB = 0;
				}

				R = (tempR+m)*255/100;
				G = (tempG+m)*255/100;
				B = (tempB+m)*255/100;
				
				
				if(R >= 255) {
					R = 255; 
				}else if (R <= 0){
					R = 0; 
				}else {
					R = (int)(R + 1.0); 
				}
				
				if(G >= 255) {
					G = 255; 
				}else if (G <= 0){
					G = 0; 
				}else {
					G = (int)(G + 1.0); 
				}
				
				if(B >= 255) {
					B = 255; 
				}else if (B <= 0){
					B = 0; 
				}else {
					B = (int)(B + 1.0); 
				}
			
			}
			
		
		public void printColor()
		{
			char c = 176;
			System.out.printf("%10s%3d%2s%3d%2s%3d%2s", "\tRGB = (" , R , ", " , G , ", " , B , ")");
			System.out.printf("%10s%3d%2s%3d%2s%3d%2s", "HSV = (" , H , (""+ c+", ")  , S , "%, " , V , "%)");
			System.out.println(); //remove later
		}
		
	}
